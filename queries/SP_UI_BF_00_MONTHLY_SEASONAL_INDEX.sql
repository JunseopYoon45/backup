CREATE OR REPLACE PROCEDURE DWSCM."SP_UI_BF_00_MONTHLY_SEASONAL_INDEX" 
(
	p_VER_CD 		VARCHAR2
	pRESULT		OUT SYS_REFCURSOR
)
IS
	p_INPUT_FROM_DATE 	DATE;
	p_INPUT_TO_DATE 	DATE;
	p_TARGET_FROM_DATE 	DATE;
	p_TARGET_TO_DATE 	DATE;

BEGIN
	SELECT MAX(INPUT_FROM_DATE)
		 , MAX(INPUT_TO_DATE)
		 , MAX(TARGET_FROM_DATE)
		 , MAX(TARGET_TO_DATE)
		 INTO
		   p_INPUT_FROM_DATE
		 , p_INPUT_TO_DATE
		 , p_TARGET_FROM_DATE
		 , p_TARGET_TO_DATE
	  FROM TB_BF_CONTROL_BOARD_VER_DTL;
	WHERE VER_CD = p_VER_CD;

	OPEN pRESULT FOR 
	WITH CAL AS (
		SELECT MIN(DAT)				AS FROM_DATE
			 , MAX(DAT)				AS TO_DATE
			 , MIN(YYYYMM)			AS YYYYMM
			 , MIN(MM)				AS MM
			 , COUNT(DAT)			AS DAT_CNT
		  FROM TB_CM_CALENDAR	
	     WHERE DAT BETWEEN p_INPUT_FROM_DATE AND p_TARGET_TO_DATE
	  GROUP BY YYYY, MM, TO_CHAR(DP_WK)
	)
	, TGT AS (
		SELECT DISTINCT ITEM_CD, ACCOUNT_CD
		  FROM TB_BF_RT_FINAL
		 WHERE VER_CD = p_VER_CD
	)
	, SA AS (
		SELECT BASE_DATE+0 AS FROM_DATE
			 , BASE_DATE + 6 AS TO_DATE
			 , IH.ANCESTER_CD AS ITEM_CD
			 , AH.ANCESTER_CD AS ACCOUNT_CD
			 , QTY
		FROM TB_CM_ACTUAL_SALES SA
		INNER JOIN TB_DPD_ITEM_HIER_CLOSURE IH ON SA.ITEM_MST_ID = IH.ANCESTER_ID
		INNER JOIN TB_DPD_SALES_HIER_CLOSURE AH ON SA.ACCOUNT_ID = AH.ANCESTER_ID
		INNER JOIN TGT ON IH.ANCESTER_CD = TGT.ITEM_CD AND AH.ANCESTER_CD = TGT.ACCOUNT_CD
		WHERE BASE_DATE BETWEEN p_INPUT_FROM_DATE AND p_INPUT_TO_DATE
	) 
    , PW_SA AS (
    	SELECT CAL.FROM_DATE AS BASE_DATE
    		 , CAL.MM
    		 , SA.ITEM_CD
    		 , SA.ACCOUNT_CD
    	     , ROUND(SA.QTY * CAL.DAT_CNT / (SA.TO_DATE-SA.FROM_DATE+1))  AS QTY
	 	  FROM SA 
	 	  LEFT JOIN CAL ON CAL.FROM_DATE BETWEEN SA.FROM_DATE AND SA.TO_DATE 
    ) 
	, RT AS (
		SELECT BASE_DATE + 0	AS FROM_DATE
			 , BASE_DATE + 6 	AS TO_DATE
			 , ITEM_CD
			 , ACCOUNT_CD
			 , QTY
		  FROM TB_BF_RT_FINAL RT
		 WHERE VER_CD = p_VER_CD
	) 
	, PW_RT AS (
		SELECT CAL.FROM_DATE AS BASE_DATE
			 , CAL.MM
			 , RT.ITEM_CD
			 , RT.ACCOUNT_CD
		 	 , ROUND(RT.QTY * CAL.DAT_CNT / (RT.TO_DATE-RT.FROM_DATE+1))  AS QTY
	 	  FROM RT 
		  LEFT JOIN CAL ON CAL.FROM_DATE BETWEEN RT.FROM_DATE AND RT.TO_DATE
	)  
	, AGG AS (
		SELECT * FROM PW_SA 
		UNION ALL 
		SELECT * FROM PW_RT 
	) 
	, CALC AS (
		SELECT MM
		     , ITEM_CD
		     , ACCOUNT_CD
		     , SUM(AVG_QTY) OVER (PARTITION BY ITEM_CD, ACCOUNT_CD) AS SUM_QTY
		     , AVG_QTY 
		  FROM (
		  	SELECT MM, ITEM_CD, ACCOUNT_CD, AVG(QTY) AS AVG_QTY
		  	  FROM AGG
		  	 GROUP BY MM, ITEM_CD, ACCOUNT_CD
		  )
	) 
	SELECT ITEM_CD
		 , ACCOUNT_CD
		 , MM AS MONTH
		 , 100 * AVG_QTY / SUM_QTY AS SEASONAL_IDX
	  FROM CALC;
END;


