CREATE OR REPLACE PROCEDURE DWSCM."SP_UI_BF_00_WEEKLY_CATE_SEASONAL_INDEX" 
(
	p_VER_CD 		VARCHAR2
	pRESULT		OUT SYS_REFCURSOR
)
IS
	p_INPUT_FROM_DATE 	DATE;
	p_INPUT_TO_DATE 	DATE;
	p_TARGET_FROM_DATE 	DATE;
	p_TARGET_TO_DATE 	DATE;

BEGIN
	SELECT MAX(INPUT_FROM_DATE)
		 , MAX(INPUT_TO_DATE)
		 , MAX(TARGET_FROM_DATE)
		 , MAX(TARGET_TO_DATE)
		 INTO
		   p_INPUT_FROM_DATE
		 , p_INPUT_TO_DATE
		 , p_TARGET_FROM_DATE
		 , p_TARGET_TO_DATE
	  FROM TB_BF_CONTROL_BOARD_VER_DTL;
	WHERE VER_CD = p_VER_CD;

	OPEN pRESULT FOR 
	WITH CAL AS (
		SELECT MIN(DAT)				AS FROM_DATE
			 , MAX(DAT)				AS TO_DATE
			 , MIN(DP_WK)			AS DP_WK
		  FROM TB_CM_CALENDAR	
	     WHERE DAT BETWEEN p_INPUT_FROM_DATE AND p_TARGET_TO_DATE
	  GROUP BY YYYY, MM, TO_CHAR(DP_WK)
	)
	, TGT AS (
		SELECT DISTINCT ITEM_CD, ACCOUNT_CD
		  FROM TB_BF_RT_FINAL
		 WHERE VER_CD = p_VER_CD
	)
	, SA AS (
		SELECT DP_WK
	 		 , SUBSTR(DP_WK, 5,6) AS WEEK
			 , IH.LVL04_CD AS ITEM_CD
			 , AH.ANCESTER_CD AS ACCOUNT_CD
			 , SUM(QTY) AS QTY
		FROM TB_CM_ACTUAL_SALES SA
		INNER JOIN TB_DPD_ITEM_HIERACHY2 IH ON SA.ITEM_MST_ID = IH.LVL05_ID
		INNER JOIN TB_DPD_SALES_HIER_CLOSURE AH ON SA.ACCOUNT_ID = AH.ANCESTER_ID
		INNER JOIN TGT ON IH.LVL05_CD = TGT.ITEM_CD AND AH.ANCESTER_CD = TGT.ACCOUNT_CD
		INNER JOIN CAL ON SA.BASE_DATE BETWEEN CAL.FROM_DATE AND CAL.TO_DATE
		WHERE BASE_DATE BETWEEN p_INPUT_FROM_DATE AND p_INPUT_TO_DATE
		GROUP BY DP_WK, SUBSTR(DP_WK, 5, 6), IH.LVL04_CD, AH.ANCESTER_CD
	) 
	, RT AS (
		SELECT DP_WK
			 , SUBSTR(DP_WK, 5,6) AS WEEK
			 , IH.LVL04_CD AS ITEM_CD
			 , ACCOUNT_CD
			 , SUM(QTY) AS QTY
		  FROM TB_BF_RT_FINAL RT
		 INNER JOIN TB_DPD_ITEM_HIERACHY2 IH ON RT.ITEM_CD = IH.LVL05_CD
  		 INNER JOIN CAL ON RT.BASE_DATE BETWEEN CAL.FROM_DATE AND CAL.TO_DATE
		 WHERE VER_CD = p_VER_CD
		 GROUP BY DP_WK, SUBSTR(DP_WK, 5,6), IH.LVL04_CD, ACCOUNT_CD
	)
	, AGG AS (
		SELECT * FROM SA 
		UNION ALL 
		SELECT * FROM RT
		
	) 
	, CALC AS (
		SELECT WEEK
		     , ITEM_CD
		     , ACCOUNT_CD
		     , SUM(AVG_QTY) OVER (PARTITION BY ITEM_CD, ACCOUNT_CD) AS SUM_QTY
		     , AVG_QTY 
		  FROM (
		  	SELECT WEEK, ITEM_CD, ACCOUNT_CD, AVG(QTY) AS AVG_QTY
		  	  FROM AGG
		  	 GROUP BY WEEK, ITEM_CD, ACCOUNT_CD
		  )
	) 
	SELECT ITEM_CD
		 , ACCOUNT_CD
		 , WEEK
		 , 100 * AVG_QTY / SUM_QTY AS SEASONAL_IDX
	  FROM CALC;
END;


