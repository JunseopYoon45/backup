CREATE OR REPLACE PROCEDURE DWSCM."SP_UI_BF_66_Q1" (
     p_FROM_DATE	  DATE
   , p_TO_DATE		  DATE
   , p_ITEM_LV		  VARCHAR2
   , p_ITEM_CD		  VARCHAR2
   , p_SALES_LV	      VARCHAR2 
   , p_SALES_CD		  VARCHAR2
   , p_SRC_TP		  VARCHAR2 
   , p_SUM			  VARCHAR2 := 'Y'	
   , p_MON 			  VARCHAR2 := 'N'
   , pRESULT          OUT SYS_REFCURSOR
)
IS
  /**************************************************************************
   * Copyrightⓒ2023 ZIONEX, All rights reserved.
   **************************************************************************
   * Name : SP_UI_BF_66_Q1
   * Purpose : 누적 예측 정확도 조회
   * Notes :
   * 	M20180115092445697M411878346346N	ITEM_ALL	상품전체
		N20180115092528519N506441512113N	LEVEL1		대분류
		N20180115092559329M499525073971N	LEVEL2		중분류
		FA5FEBBCADDED90DE053DD0A10AC8DB5	LEVEL3		소분류
		M20180115092627169N446701842271O	ITEM		상품선택
		N20180115092712856O251735022591O	ALL			채널전체
		FE00001E54F88F3FE053DD0A10AC762B	CENTER		센터
		N20180115092710840N520475678180O	CHANNEL		채널선택
   **************************************************************************/
/**
DECLARE 
	pRESULT SYS_REFCURSOR;
BEGIN
--	DWSCM.SP_UI_BF_66_Q1('2023-08-01', '2023-10-01', 'FA5FEBBCADDED90DE053DD0A10AC8DB5', 'AC01', 'N20180115092712856O251735022591O', 'ALL', 'KR', 'Y', 'Y', pRESULT);
	DWSCM.SP_UI_BF_66_Q1('2023-08-01', '2023-10-01', 'M20180115092627169N446701842271O', '57451', 'N20180115092710840N520475678180O', '01_POS', 'KR', 'N', 'N', pRESULT);
	DBMS_SQL.RETURN_RESULT(pRESULT);
END;
**/
	v_FROM_DATE DATE := NULL;
	v_EXISTS_NUM NUMBER := 0;
	v_SRC_TP	VARCHAR2(10) := NVL(p_SRC_TP, '');

BEGIN

	SELECT MIN(TARGET_FROM_DATE) INTO v_FROM_DATE
	  FROM TB_BF_CONTROL_BOARD_VER_DTL
	 WHERE VER_CD IN (
	 	SELECT VER_CD 
	 	  FROM (SELECT VER_CD, ROW_NUMBER() OVER (ORDER BY VER_CD DESC) AS RN
				  FROM TB_BF_CONTROL_BOARD_VER_DTL
				 WHERE VER_CD LIKE 'BF-%'
				   AND PROCESS_NO = 1000000
				   AND STATUS = 'Completed'
				   AND RUN_STRT_DATE BETWEEN p_FROM_DATE AND TRUNC(p_TO_DATE, 'IW')
				   AND TRUNC(SYSDATE, 'IW') - TRUNC(RUN_STRT_DATE, 'IW') >= 35)
		 WHERE (v_SRC_TP = 'KR' AND RN <= 5) OR (v_SRC_TP = 'FR' AND RN <= 13) OR (v_SRC_TP IS NULL AND RN <= 13)
		   ) 
  	   AND ENGINE_TP_CD IS NOT NULL;
	
  	SELECT CASE WHEN EXISTS (SELECT 1 FROM TB_CM_ITEM_LEVEL_MGMT WHERE LV_MGMT_ID = p_ITEM_LV) THEN 1 ELSE 0 END INTO v_EXISTS_NUM
    FROM DUAL;  
  	  
    IF p_SUM = 'Y' AND v_EXISTS_NUM = 1
    THEN 
    OPEN pRESULT FOR
    WITH IDS AS (
        SELECT IH.DESCENDANT_ID AS DESC_ID
             , IH.DESCENDANT_CD AS DESC_CD
             , IH.DESCENDANT_NM AS DESC_NM
             , IH.ANCESTER_CD 	AS ANCS_CD
             , IL.ITEM_LV_NM 	AS ANCS_NM
             , IM.ATTR_03 		AS SRC_TP
          FROM TB_DPD_ITEM_HIER_CLOSURE IH
         INNER JOIN TB_CM_ITEM_LEVEL_MGMT IL 
         	ON IH.ANCESTER_ID = IL.ID
         INNER JOIN TB_CM_ITEM_MST IM 
         	ON IH.DESCENDANT_CD = IM.ITEM_CD
         WHERE 1=1
           AND IL.LV_MGMT_ID = p_ITEM_LV
           AND IH.LEAF_YN = 'Y'
           AND IM.ATTR_03 LIKE v_SRC_TP||'%'
           AND ANCESTER_CD = p_ITEM_CD  
         UNION ALL
        SELECT IH.DESCENDANT_ID AS DESC_ID
             , IH.DESCENDANT_CD AS DESC_CD
             , IH.DESCENDANT_NM AS DESC_NM
             , IH.ANCESTER_CD 	AS ANCS_CD
             , CAST(IT.ITEM_NM 	AS VARCHAR2(255)) AS ANCS_NM
             , IT.ATTR_03 		AS SRC_TP
          FROM TB_DPD_ITEM_HIER_CLOSURE IH
         INNER JOIN TB_CM_ITEM_MST IT 
        	ON IH.ANCESTER_ID = IT.ID 
         WHERE 1=1
           AND IH.LEAF_YN = 'Y'
           AND 1 = CASE WHEN EXISTS (SELECT 1 FROM TB_CM_ITEM_LEVEL_MGMT WHERE LV_MGMT_ID = p_ITEM_LV) THEN 0 ELSE 1 END
           AND IT.ATTR_03 LIKE v_SRC_TP||'%'
           AND ANCESTER_CD = p_ITEM_CD
    )
    , ADS AS ( 
        SELECT SH.DESCENDANT_ID AS DESC_ID
             , SH.DESCENDANT_CD AS DESC_CD
             , SH.DESCENDANT_NM AS DESC_NM 
             , SH.ANCESTER_CD 	AS ANCS_CD
             , SL.SALES_LV_NM 	AS ANCS_NM
          FROM TB_DPD_SALES_HIER_CLOSURE SH
         INNER JOIN TB_DP_SALES_LEVEL_MGMT SL 
         	ON SH.ANCESTER_ID = SL.ID 
         WHERE 1=1
           AND SL.LV_MGMT_ID = p_SALES_LV
           AND SH.LEAF_YN = 'Y' 
           AND ANCESTER_CD LIKE p_SALES_CD||'%'
         UNION ALL
        SELECT SH.DESCENDANT_ID AS DESC_ID
             , SH.DESCENDANT_CD AS DESC_CD
             , SH.DESCENDANT_NM AS DESC_NM
             , SH.ANCESTER_CD 	AS ANCS_CD
             , AM.ACCOUNT_NM	AS ANCS_NM
          FROM TB_DPD_SALES_HIER_CLOSURE SH
         INNER JOIN TB_DP_ACCOUNT_MST AM 
         	ON SH.ANCESTER_ID = AM.ID
         WHERE 1=1
           AND SH.LEAF_YN = 'Y'
           AND 1 = CASE WHEN EXISTS (SELECT 1 FROM TB_DP_SALES_LEVEL_MGMT WHERE LV_MGMT_ID = p_SALES_LV) THEN 0 ELSE 1 END
           AND ANCESTER_CD LIKE p_SALES_CD||'%'
    )
    , VB AS (
	    SELECT VER_CD, ROW_NUMBER() OVER (ORDER BY VER_CD DESC) AS RN
		  FROM TB_BF_CONTROL_BOARD_VER_DTL
		 WHERE VER_CD LIKE 'BF-%'
		   AND PROCESS_NO = 1000000
		   AND STATUS = 'Completed'
		   AND RUN_STRT_DATE BETWEEN p_FROM_DATE AND TRUNC(p_TO_DATE, 'IW')
	)
	, MD AS (
		SELECT VER_CD
			 , MAX(TARGET_FROM_DATE) + 34 AS TARGET_TO_DATE_KR
			 , MAX(TARGET_FROM_DATE) + 90 AS TARGET_TO_DATE_FR
			 , MAX(TARGET_FROM_DATE) 	  AS TARGET_FROM_DATE
	      FROM TB_BF_CONTROL_BOARD_VER_DTL
	    WHERE VER_CD IN (SELECT VER_CD FROM VB)
	      AND PROCESS_NO = 10000
		GROUP BY VER_CD    
	)
	, RT_KR AS (
		SELECT RT.VER_CD
	 		 , IH.ANCESTER_CD AS ITEM_CD
	 		 , IH.ANCESTER_NM AS ITEM_NM
			 , AH.ANCESTER_CD AS ACCOUNT_CD
			 , AH.ANCESTER_NM AS ACCOUNT_NM
			 , BASE_DATE
			 , SUM(QTY) AS QTY
  		  FROM TB_BF_RT_AGG RT
  	    INNER JOIN TB_DPD_ITEM_HIER_CLOSURE IH 
		 	ON RT.ITEM_CD = IH.DESCENDANT_CD
		INNER JOIN TB_DPD_SALES_HIER_CLOSURE AH 
		 	ON RT.ACCOUNT_CD = AH.DESCENDANT_CD
		INNER JOIN ADS AH2 
		    ON AH.DESCENDANT_CD = AH2.DESC_CD 
		   AND AH.ANCESTER_CD = AH2.ANCS_CD
		INNER JOIN MD ON MD.VER_CD = RT.VER_CD
		  AND RT.BASE_DATE < MD.TARGET_TO_DATE_KR
		WHERE 1=1
		   AND AH.ANCESTER_CD LIKE p_SALES_CD||'%'
		   AND IH.ANCESTER_CD = p_ITEM_CD
		   AND SRC_TP = 'KR'
		   AND 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                        WHEN v_SRC_TP = 'KR' THEN 1
                        ELSE 0 END	
		GROUP BY RT.VER_CD, IH.ANCESTER_CD, IH.ANCESTER_NM, AH.ANCESTER_CD, AH.ANCESTER_NM, BASE_DATE
	) 
	, RT_FR AS (
		SELECT RT.VER_CD
	 		 , IH.ANCESTER_CD AS ITEM_CD
	 		 , IH.ANCESTER_NM AS ITEM_NM
			 , AH.ANCESTER_CD AS ACCOUNT_CD
			 , AH.ANCESTER_NM AS ACCOUNT_NM
			 , BASE_DATE
			 , SUM(QTY) AS QTY
  		  FROM TB_BF_RT_AGG RT
  	    INNER JOIN TB_DPD_ITEM_HIER_CLOSURE IH 
		 	ON RT.ITEM_CD = IH.DESCENDANT_CD
		INNER JOIN TB_DPD_SALES_HIER_CLOSURE AH 
		 	ON RT.ACCOUNT_CD = AH.DESCENDANT_CD
		INNER JOIN ADS AH2 
		    ON AH.DESCENDANT_CD = AH2.DESC_CD 
		   AND AH.ANCESTER_CD = AH2.ANCS_CD
		INNER JOIN MD ON MD.VER_CD = RT.VER_CD
		  AND RT.BASE_DATE < MD.TARGET_TO_DATE_FR
		WHERE 1=1
		   AND AH.ANCESTER_CD LIKE p_SALES_CD||'%'
		   AND IH.ANCESTER_CD = p_ITEM_CD
		   AND SRC_TP = 'FR'
		   AND 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                        WHEN v_SRC_TP = 'FR' THEN 1
                        ELSE 0 END			   
		GROUP BY RT.VER_CD, IH.ANCESTER_CD, IH.ANCESTER_NM, AH.ANCESTER_CD, AH.ANCESTER_NM, BASE_DATE
	) 
	, SA_KR AS (
		SELECT S.VER_CD
			 , IH.ANCESTER_CD AS ITEM_CD
			 , AH.ANCESTER_CD AS ACCOUNT_CD
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT VER_CD
		  	 		 , BASE_DATE
		  	 		 , ITEM_CD
		  	 		 , ACCOUNT_CD
		  	 		 , QTY 
		  	 	  FROM TB_CM_ACTUAL_SALES_AGG 
		  	 	 WHERE VER_CD IN (SELECT VER_CD FROM VB)
		  	 	   AND BASE_DATE >= v_FROM_DATE
		  	 	   AND SRC_TP = 'KR'
		  	 	   ) S
		 INNER JOIN TB_DPD_ITEM_HIER_CLOSURE IH 
            ON S.ITEM_CD = IH.DESCENDANT_CD
         INNER JOIN TB_DPD_SALES_HIER_CLOSURE AH 
         	ON S.ACCOUNT_CD = AH.DESCENDANT_CD
         INNER JOIN ADS AH2 
         	ON AH.DESCENDANT_CD = AH2.DESC_CD 
           AND AH.ANCESTER_CD = AH2.ANCS_CD
         INNER JOIN TB_CM_CALENDAR CL 
         	ON CL.DAT = S.BASE_DATE
		 INNER JOIN MD 
          	ON S.VER_CD = MD.VER_CD
           AND S.BASE_DATE <= MD.TARGET_TO_DATE_KR         	
         WHERE 1=1
           AND IH.ANCESTER_CD = p_ITEM_CD
           AND AH.ANCESTER_CD LIKE p_SALES_CD||'%'
           AND 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                        WHEN v_SRC_TP = 'KR' THEN 1
                        ELSE 0 END	
         GROUP BY S.VER_CD, IH.ANCESTER_CD, IH.ANCESTER_NM, AH.ANCESTER_CD, AH.ANCESTER_NM, S.BASE_DATE		  	 	   		
	)
	, SA_FR AS (
		SELECT S.VER_CD
			 , IH.ANCESTER_CD AS ITEM_CD
			 , AH.ANCESTER_CD AS ACCOUNT_CD
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT VER_CD
		  	 		 , BASE_DATE
		  	 		 , ITEM_CD
		  	 		 , ACCOUNT_CD
		  	 		 , QTY 
		  	 	  FROM TB_CM_ACTUAL_SALES_AGG 
		  	 	 WHERE VER_CD IN (SELECT VER_CD FROM VB)
		  	 	   AND BASE_DATE >= v_FROM_DATE
		  	 	   AND SRC_TP = 'FR'
		  	 	   ) S
		 INNER JOIN TB_DPD_ITEM_HIER_CLOSURE IH 
            ON S.ITEM_CD = IH.DESCENDANT_CD
         INNER JOIN TB_DPD_SALES_HIER_CLOSURE AH 
         	ON S.ACCOUNT_CD = AH.DESCENDANT_CD
         INNER JOIN ADS AH2 
         	ON AH.DESCENDANT_CD = AH2.DESC_CD 
           AND AH.ANCESTER_CD = AH2.ANCS_CD
         INNER JOIN TB_CM_CALENDAR CL 
         	ON CL.DAT = S.BASE_DATE           
         INNER JOIN MD 
          	ON S.VER_CD = MD.VER_CD
           AND S.BASE_DATE <= MD.TARGET_TO_DATE_FR
         WHERE 1=1
           AND IH.ANCESTER_CD = p_ITEM_CD
           AND AH.ANCESTER_CD LIKE p_SALES_CD||'%'
           AND 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                        WHEN v_SRC_TP = 'FR' THEN 1
                        ELSE 0 END	
         GROUP BY S.VER_CD, IH.ANCESTER_CD, IH.ANCESTER_NM, AH.ANCESTER_CD, AH.ANCESTER_NM, S.BASE_DATE		  	 	   		
	)
	, SA AS (
		SELECT VER_CD
			 , ITEM_CD
			 , ACCOUNT_CD
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT *
			  	  FROM SA_KR
				 UNION ALL
				SELECT *
				  FROM SA_FR
			   )
		 GROUP BY VER_CD, ITEM_CD, ACCOUNT_CD, BASE_DATE
	)
	, RT AS (
		SELECT VER_CD
			 , ITEM_CD
			 , ITEM_NM
			 , ACCOUNT_CD
			 , ACCOUNT_NM
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT *
			  	  FROM RT_KR
				 UNION ALL
				SELECT *
				  FROM RT_FR)
		 GROUP BY VER_CD, ITEM_CD, ITEM_NM, ACCOUNT_CD, ACCOUNT_NM, BASE_DATE
	)
	, WAPE AS (
		SELECT ITEM_CD
			 , ITEM_NM
			 , ACCOUNT_CD
			 , ACCOUNT_NM
			 , 100 - CASE WHEN SUM(ERR) = 0 THEN 0 
                       ELSE ROUND((CASE WHEN SUM(ERR)/SUM(SALES)<=1 THEN SUM(ERR)/SUM(SALES) ELSE 1 END), 3) * 100 END AS TOTAL_ACCRY
          FROM (		
			 SELECT RT.VER_CD
			 	  , RT.BASE_DATE
			 	  , RT.ITEM_CD
			 	  , RT.ITEM_NM
			 	  , RT.ACCOUNT_CD
			 	  , RT.ACCOUNT_NM
				  , CASE WHEN RT.BASE_DATE < TRUNC(SYSDATE, 'IW') THEN ABS(RT.QTY - NVL(SA.QTY, 0)) 
	             		 ELSE ABS(RT.QTY - SA.QTY) END AS ERR
		          , RT.QTY+0.00001					AS FCS
		          , TO_NUMBER(NVL(SA.QTY, 0)) + 0.00001		AS SALES 
			   FROM RT
			  LEFT JOIN SA 
			  	 ON RT.ITEM_CD = SA.ITEM_CD
			   	AND RT.ACCOUNT_CD = SA.ACCOUNT_CD
			   	AND RT.VER_CD = SA.VER_CD
			   	AND RT.BASE_DATE = SA.BASE_DATE
		   		)
		   	GROUP BY ITEM_CD, ITEM_NM, ACCOUNT_CD, ACCOUNT_NM		
	)
	 SELECT CASE WHEN p_MON = 'N' THEN TO_DATE(SUBSTR(VER_CD, 4, 8), 'YYYY-MM-DD')
        		 WHEN p_MON = 'Y' THEN TO_DATE(SUBSTR(VER_CD, 4, 6), 'YYYY-MM') END AS "DATE"
	 	  , A.ITEM_CD
          , A.ITEM_NM
          , A.ACCOUNT_CD
          , A.ACCOUNT_NM
		  , 100 - CASE WHEN SUM(ERR) = 0 THEN 0 
                       ELSE ROUND((CASE WHEN SUM(ERR)/SUM(SALES)<=1 THEN SUM(ERR)/SUM(SALES) ELSE 1 END), 3) * 100 END AS WAPE
          , B.TOTAL_ACCRY
       FROM (
		 	SELECT RT.VER_CD
		 	  	 , RT.BASE_DATE
		 	  	 , RT.ITEM_CD
		 	  	 , RT.ITEM_NM
		 	  	 , RT.ACCOUNT_CD
		 	  	 , RT.ACCOUNT_NM
			  	 , CASE WHEN RT.BASE_DATE < TRUNC(SYSDATE, 'IW') THEN ABS(RT.QTY - NVL(SA.QTY, 0)) 
             			ELSE ABS(RT.QTY - SA.QTY) END AS ERR
	          	 , RT.QTY+0.00001					AS FCS
	          	 , TO_NUMBER(NVL(SA.QTY, 0)) + 0.00001		AS SALES 
		  	 FROM RT
		  	 LEFT JOIN SA 
		  	   ON RT.ITEM_CD = SA.ITEM_CD
		   	  AND RT.ACCOUNT_CD = SA.ACCOUNT_CD
		   	  AND RT.VER_CD = SA.VER_CD
		   	  AND RT.BASE_DATE = SA.BASE_DATE
		   	) A
	  INNER JOIN WAPE B 
	  	 ON A.ITEM_CD = B.ITEM_CD 
	  	AND A.ITEM_NM = B.ITEM_NM 
	  	AND A.ACCOUNT_CD = B.ACCOUNT_CD
	  	AND A.ACCOUNT_NM = B.ACCOUNT_NM
	  GROUP BY CASE WHEN p_MON = 'N' THEN TO_DATE(SUBSTR(VER_CD, 4, 8), 'YYYY-MM-DD')
			        WHEN p_MON = 'Y' THEN TO_DATE(SUBSTR(VER_CD, 4, 6), 'YYYY-MM') END, A.ITEM_CD, A.ITEM_NM, A.ACCOUNT_CD, A.ACCOUNT_NM, B.TOTAL_ACCRY	   	
	  ORDER BY 2, 4, 1;
	
	ELSIF p_SUM = 'Y' AND v_EXISTS_NUM = 0
    THEN 
    OPEN pRESULT FOR
    WITH IDS AS (
        SELECT IH.DESCENDANT_ID AS DESC_ID
             , IH.DESCENDANT_CD AS DESC_CD
             , IH.DESCENDANT_NM AS DESC_NM
             , IH.ANCESTER_CD 	AS ANCS_CD
             , IL.ITEM_LV_NM 	AS ANCS_NM
             , IM.ATTR_03 		AS SRC_TP
          FROM TB_DPD_ITEM_HIER_CLOSURE IH
         INNER JOIN TB_CM_ITEM_LEVEL_MGMT IL 
         	ON IH.ANCESTER_ID = IL.ID
         INNER JOIN TB_CM_ITEM_MST IM 
         	ON IH.DESCENDANT_CD = IM.ITEM_CD
         WHERE 1=1
           AND IL.LV_MGMT_ID = p_ITEM_LV
           AND IH.LEAF_YN = 'Y'
           AND IM.ATTR_03 LIKE v_SRC_TP||'%'
           AND ANCESTER_CD = p_ITEM_CD  
         UNION ALL
        SELECT IH.DESCENDANT_ID AS DESC_ID
             , IH.DESCENDANT_CD AS DESC_CD
             , IH.DESCENDANT_NM AS DESC_NM
             , IH.ANCESTER_CD 	AS ANCS_CD
             , CAST(IT.ITEM_NM 	AS VARCHAR2(255)) AS ANCS_NM
             , IT.ATTR_03 		AS SRC_TP
          FROM TB_DPD_ITEM_HIER_CLOSURE IH
         INNER JOIN TB_CM_ITEM_MST IT 
        	ON IH.ANCESTER_ID = IT.ID 
         WHERE 1=1
           AND IH.LEAF_YN = 'Y'
           AND 1 = CASE WHEN EXISTS (SELECT 1 FROM TB_CM_ITEM_LEVEL_MGMT WHERE LV_MGMT_ID = p_ITEM_LV) THEN 0 ELSE 1 END
           AND IT.ATTR_03 LIKE v_SRC_TP||'%'
           AND ANCESTER_CD = p_ITEM_CD
    )
    , ADS AS ( 
        SELECT SH.DESCENDANT_ID AS DESC_ID
             , SH.DESCENDANT_CD AS DESC_CD
             , SH.DESCENDANT_NM AS DESC_NM 
             , SH.ANCESTER_CD 	AS ANCS_CD
             , SL.SALES_LV_NM 	AS ANCS_NM
          FROM TB_DPD_SALES_HIER_CLOSURE SH
         INNER JOIN TB_DP_SALES_LEVEL_MGMT SL 
         	ON SH.ANCESTER_ID = SL.ID 
         WHERE 1=1
           AND SL.LV_MGMT_ID = p_SALES_LV
           AND SH.LEAF_YN = 'Y' 
           AND ANCESTER_CD LIKE p_SALES_CD||'%'
         UNION ALL
        SELECT SH.DESCENDANT_ID AS DESC_ID
             , SH.DESCENDANT_CD AS DESC_CD
             , SH.DESCENDANT_NM AS DESC_NM
             , SH.ANCESTER_CD 	AS ANCS_CD
             , AM.ACCOUNT_NM	AS ANCS_NM
          FROM TB_DPD_SALES_HIER_CLOSURE SH
         INNER JOIN TB_DP_ACCOUNT_MST AM 
         	ON SH.ANCESTER_ID = AM.ID
         WHERE 1=1
           AND SH.LEAF_YN = 'Y'
           AND 1 = CASE WHEN EXISTS (SELECT 1 FROM TB_DP_SALES_LEVEL_MGMT WHERE LV_MGMT_ID = p_SALES_LV) THEN 0 ELSE 1 END
           AND ANCESTER_CD LIKE p_SALES_CD||'%'
    )
    , VB AS (
	    SELECT VER_CD, ROW_NUMBER() OVER (ORDER BY VER_CD DESC) AS RN
		  FROM TB_BF_CONTROL_BOARD_VER_DTL
		 WHERE VER_CD LIKE 'BF-%'
		   AND PROCESS_NO = 1000000
		   AND STATUS = 'Completed'
		   AND RUN_STRT_DATE BETWEEN p_FROM_DATE AND TRUNC(p_TO_DATE, 'IW')
	)
	, MD AS (
		SELECT VER_CD
			 , MAX(TARGET_FROM_DATE) + 34 AS TARGET_TO_DATE_KR
			 , MAX(TARGET_FROM_DATE) + 90 AS TARGET_TO_DATE_FR
			 , MAX(TARGET_FROM_DATE) 	  AS TARGET_FROM_DATE
	      FROM TB_BF_CONTROL_BOARD_VER_DTL
	    WHERE VER_CD IN (SELECT VER_CD FROM VB)
	      AND PROCESS_NO = 10000
		GROUP BY VER_CD    
	)
	, RT_KR AS (
		SELECT RT.VER_CD
	 		 , IH.ANCS_CD AS ITEM_CD
	 		 , IH.ANCS_NM AS ITEM_NM
			 , AH.ANCS_CD AS ACCOUNT_CD
			 , AH.ANCS_NM AS ACCOUNT_NM
			 , BASE_DATE
			 , SUM(QTY)   AS QTY
		  FROM TB_BF_RT_FINAL RT
		INNER JOIN IDS IH ON RT.ITEM_CD = IH.DESC_CD
		INNER JOIN ADS AH ON RT.ACCOUNT_CD = AH.DESC_CD
		INNER JOIN MD ON MD.VER_CD = RT.VER_CD
		  AND RT.BASE_DATE < MD.TARGET_TO_DATE_KR
		WHERE 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                       WHEN v_SRC_TP = 'KR' THEN 1
                       ELSE 0 END			  
          AND IH.SRC_TP = 'KR'
		GROUP BY RT.VER_CD, IH.ANCS_CD, IH.ANCS_NM, AH.ANCS_CD, AH.ANCS_NM, BASE_DATE
	) 
	, RT_FR AS (
		SELECT RT.VER_CD
	 		 , IH.ANCS_CD AS ITEM_CD
	 		 , IH.ANCS_NM AS ITEM_NM
			 , AH.ANCS_CD AS ACCOUNT_CD
			 , AH.ANCS_NM AS ACCOUNT_NM
			 , BASE_DATE
			 , SUM(QTY)   AS QTY
		  FROM TB_BF_RT_FINAL RT
		INNER JOIN IDS IH ON RT.ITEM_CD = IH.DESC_CD
		INNER JOIN ADS AH ON RT.ACCOUNT_CD = AH.DESC_CD
		INNER JOIN MD ON MD.VER_CD = RT.VER_CD
		  AND RT.BASE_DATE < MD.TARGET_TO_DATE_FR
		WHERE 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                       WHEN v_SRC_TP = 'FR' THEN 1
                       ELSE 0 END			  		
		  AND IH.SRC_TP = 'FR'
		GROUP BY RT.VER_CD, IH.ANCS_CD, IH.ANCS_NM, AH.ANCS_CD, AH.ANCS_NM, BASE_DATE
	) 
	, SA_KR AS (
		SELECT SA.VER_CD
			 , IH.ANCS_CD AS ITEM_CD
			 , AH.ANCS_CD AS ACCOUNT_CD
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT VER_CD
		  	 		 , BASE_DATE
		  	 		 , ITEM_MST_ID
		  	 		 , ACCOUNT_ID
		  	 		 , QTY 
		  	 	  FROM TB_CM_ACTUAL_SALES_FCST
		  	 	 WHERE VER_CD IN (SELECT VER_CD FROM VB)
		  	 	   AND BASE_DATE >= v_FROM_DATE
		  	 	   ) SA
		 INNER JOIN IDS IH ON SA.ITEM_MST_ID = IH.DESC_ID
		 INNER JOIN ADS AH ON SA.ACCOUNT_ID = AH.DESC_ID
		 INNER JOIN MD ON MD.VER_CD = SA.VER_CD
		   AND SA.BASE_DATE BETWEEN MD.TARGET_FROM_DATE AND MD.TARGET_TO_DATE_KR
		 WHERE 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                        WHEN v_SRC_TP = 'KR' THEN 1
                        ELSE 0 END		   
		   AND IH.SRC_TP = 'KR'                        
		 GROUP BY SA.VER_CD, IH.ANCS_CD, AH.ANCS_CD, BASE_DATE
	)
	, SA_FR AS (
		SELECT SA.VER_CD
			 , IH.ANCS_CD AS ITEM_CD
			 , AH.ANCS_CD AS ACCOUNT_CD
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT VER_CD
		  	 		 , BASE_DATE
		  	 		 , ITEM_MST_ID
		  	 		 , ACCOUNT_ID
		  	 		 , QTY 
		  	 	  FROM TB_CM_ACTUAL_SALES_FCST
		  	 	 WHERE VER_CD IN (SELECT VER_CD FROM VB)
		  	 	   AND BASE_DATE >= v_FROM_DATE
		  	 	   ) SA
		 INNER JOIN IDS IH ON SA.ITEM_MST_ID = IH.DESC_ID
		 INNER JOIN ADS AH ON SA.ACCOUNT_ID = AH.DESC_ID
		 INNER JOIN MD ON MD.VER_CD = SA.VER_CD
		   AND SA.BASE_DATE BETWEEN MD.TARGET_FROM_DATE AND MD.TARGET_TO_DATE_FR
		 WHERE 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                        WHEN v_SRC_TP = 'FR' THEN 1
                        ELSE 0 END
		  AND IH.SRC_TP = 'FR'                        
		 GROUP BY SA.VER_CD, IH.ANCS_CD, AH.ANCS_CD, BASE_DATE
	)
	, RT AS (
		SELECT VER_CD
			 , ITEM_CD
			 , ITEM_NM
			 , ACCOUNT_CD
			 , ACCOUNT_NM
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT *
			  	  FROM RT_KR
				 UNION ALL
				SELECT *
				  FROM RT_FR)
		 GROUP BY VER_CD, ITEM_CD, ITEM_NM, ACCOUNT_CD, ACCOUNT_NM, BASE_DATE
	)
	, SA AS (
		SELECT VER_CD
			 , ITEM_CD
			 , ACCOUNT_CD
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT *
			  	  FROM SA_KR
				 UNION ALL
				SELECT *
				  FROM SA_FR
			   )
		 GROUP BY VER_CD, ITEM_CD, ACCOUNT_CD, BASE_DATE
	)
	, WAPE AS (
		SELECT ITEM_CD
			 , ITEM_NM
			 , ACCOUNT_CD
			 , ACCOUNT_NM
			 , 100 - CASE WHEN SUM(ERR) = 0 THEN 0 
                       ELSE ROUND((CASE WHEN SUM(ERR)/SUM(SALES)<=1 THEN SUM(ERR)/SUM(SALES) ELSE 1 END), 3) * 100 END AS TOTAL_ACCRY
          FROM (		
			 SELECT RT.VER_CD
			 	  , RT.BASE_DATE
			 	  , RT.ITEM_CD
			 	  , RT.ITEM_NM
			 	  , RT.ACCOUNT_CD
			 	  , RT.ACCOUNT_NM
				  , CASE WHEN RT.BASE_DATE < TRUNC(SYSDATE, 'IW') THEN ABS(RT.QTY - NVL(SA.QTY, 0)) 
	             		 ELSE ABS(RT.QTY - SA.QTY) END AS ERR
		          , RT.QTY+0.00001					AS FCS
		          , TO_NUMBER(NVL(SA.QTY, 0)) + 0.00001		AS SALES 
			   FROM RT
			  LEFT JOIN SA 
			  	 ON RT.ITEM_CD = SA.ITEM_CD
			   	AND RT.ACCOUNT_CD = SA.ACCOUNT_CD
			   	AND RT.VER_CD = SA.VER_CD
			   	AND RT.BASE_DATE = SA.BASE_DATE
		   		)
		   	GROUP BY ITEM_CD, ITEM_NM, ACCOUNT_CD, ACCOUNT_NM		
	)
	 SELECT CASE WHEN p_MON = 'N' THEN TO_DATE(SUBSTR(VER_CD, 4, 8), 'YYYY-MM-DD')
        		 WHEN p_MON = 'Y' THEN TO_DATE(SUBSTR(VER_CD, 4, 6), 'YYYY-MM') END AS "DATE"
	 	  , A.ITEM_CD
          , A.ITEM_NM
          , A.ACCOUNT_CD
          , A.ACCOUNT_NM
		  , 100 - CASE WHEN SUM(ERR) = 0 THEN 0 
                       ELSE ROUND((CASE WHEN SUM(ERR)/SUM(SALES)<=1 THEN SUM(ERR)/SUM(SALES) ELSE 1 END), 3) * 100 END AS WAPE
          , B.TOTAL_ACCRY
       FROM (
		 	SELECT RT.VER_CD
		 	  	 , RT.BASE_DATE
		 	  	 , RT.ITEM_CD
		 	  	 , RT.ITEM_NM
		 	  	 , RT.ACCOUNT_CD
		 	  	 , RT.ACCOUNT_NM
			  	 , CASE WHEN RT.BASE_DATE < TRUNC(SYSDATE, 'IW') THEN ABS(RT.QTY - NVL(SA.QTY, 0)) 
             			ELSE ABS(RT.QTY - SA.QTY) END AS ERR
	          	 , RT.QTY+0.00001					AS FCS
	          	 , TO_NUMBER(NVL(SA.QTY, 0)) + 0.00001		AS SALES 
		  	 FROM RT
		  	 LEFT JOIN SA 
		  	   ON RT.ITEM_CD = SA.ITEM_CD
		   	  AND RT.ACCOUNT_CD = SA.ACCOUNT_CD
		   	  AND RT.VER_CD = SA.VER_CD
		   	  AND RT.BASE_DATE = SA.BASE_DATE
		   	) A
	  INNER JOIN WAPE B 
	  	 ON A.ITEM_CD = B.ITEM_CD 
	  	AND A.ITEM_NM = B.ITEM_NM 
	  	AND A.ACCOUNT_CD = B.ACCOUNT_CD
	  	AND A.ACCOUNT_NM = B.ACCOUNT_NM
	  GROUP BY CASE WHEN p_MON = 'N' THEN TO_DATE(SUBSTR(VER_CD, 4, 8), 'YYYY-MM-DD')
			        WHEN p_MON = 'Y' THEN TO_DATE(SUBSTR(VER_CD, 4, 6), 'YYYY-MM') END, A.ITEM_CD, A.ITEM_NM, A.ACCOUNT_CD, A.ACCOUNT_NM, B.TOTAL_ACCRY	   	
	  ORDER BY 2, 4, 1; 
	 
	ELSIF p_SUM = 'N'
	THEN
	OPEN pRESULT FOR
	WITH IDS AS (
        SELECT IH.DESCENDANT_ID AS DESC_ID
             , IH.DESCENDANT_CD AS DESC_CD
             , IH.DESCENDANT_NM AS DESC_NM
             , IH.ANCESTER_CD 	AS ANCS_CD
             , IL.ITEM_LV_NM 	AS ANCS_NM
             , IM.ATTR_03 		AS SRC_TP
          FROM TB_DPD_ITEM_HIER_CLOSURE IH
         INNER JOIN TB_CM_ITEM_LEVEL_MGMT IL 
         	ON IH.ANCESTER_ID = IL.ID
         INNER JOIN TB_CM_ITEM_MST IM 
         	ON IH.DESCENDANT_CD = IM.ITEM_CD
         WHERE 1=1
           AND IL.LV_MGMT_ID = p_ITEM_LV
           AND IH.LEAF_YN = 'Y'
           AND IM.ATTR_03 LIKE v_SRC_TP||'%'
           AND ANCESTER_CD = p_ITEM_CD  
         UNION ALL
        SELECT IH.DESCENDANT_ID AS DESC_ID
             , IH.DESCENDANT_CD AS DESC_CD
             , IH.DESCENDANT_NM AS DESC_NM
             , IH.ANCESTER_CD 	AS ANCS_CD
             , CAST(IT.ITEM_NM 	AS VARCHAR2(255)) AS ANCS_NM
             , IT.ATTR_03 		AS SRC_TP
          FROM TB_DPD_ITEM_HIER_CLOSURE IH
         INNER JOIN TB_CM_ITEM_MST IT 
        	ON IH.ANCESTER_ID = IT.ID 
         WHERE 1=1
           AND IH.LEAF_YN = 'Y'
           AND 1 = CASE WHEN EXISTS (SELECT 1 FROM TB_CM_ITEM_LEVEL_MGMT WHERE LV_MGMT_ID = p_ITEM_LV) THEN 0 ELSE 1 END
           AND IT.ATTR_03 LIKE v_SRC_TP||'%'
           AND ANCESTER_CD = p_ITEM_CD
    )
    , ADS AS ( 
        SELECT SH.DESCENDANT_ID AS DESC_ID
             , SH.DESCENDANT_CD AS DESC_CD
             , SH.DESCENDANT_NM AS DESC_NM 
             , SH.ANCESTER_CD 	AS ANCS_CD
             , SL.SALES_LV_NM 	AS ANCS_NM
          FROM TB_DPD_SALES_HIER_CLOSURE SH
         INNER JOIN TB_DP_SALES_LEVEL_MGMT SL 
         	ON SH.ANCESTER_ID = SL.ID 
         WHERE 1=1
           AND SL.LV_MGMT_ID = p_SALES_LV
           AND SH.LEAF_YN = 'Y' 
           AND ANCESTER_CD LIKE p_SALES_CD||'%'
         UNION ALL
        SELECT SH.DESCENDANT_ID AS DESC_ID
             , SH.DESCENDANT_CD AS DESC_CD
             , SH.DESCENDANT_NM AS DESC_NM
             , SH.ANCESTER_CD 	AS ANCS_CD
             , AM.ACCOUNT_NM	AS ANCS_NM
          FROM TB_DPD_SALES_HIER_CLOSURE SH
         INNER JOIN TB_DP_ACCOUNT_MST AM 
         	ON SH.ANCESTER_ID = AM.ID
         WHERE 1=1
           AND SH.LEAF_YN = 'Y'
           AND 1 = CASE WHEN EXISTS (SELECT 1 FROM TB_DP_SALES_LEVEL_MGMT WHERE LV_MGMT_ID = p_SALES_LV) THEN 0 ELSE 1 END
           AND ANCESTER_CD LIKE p_SALES_CD||'%'
    )
	, VB AS (
	    SELECT VER_CD, ROW_NUMBER() OVER (ORDER BY VER_CD DESC) AS RN
		  FROM TB_BF_CONTROL_BOARD_VER_DTL
		 WHERE VER_CD LIKE 'BF-%'
		   AND PROCESS_NO = 1000000
		   AND STATUS = 'Completed'
		   AND RUN_STRT_DATE BETWEEN p_FROM_DATE AND TRUNC(p_TO_DATE, 'IW')
	)
	, MD AS (
		SELECT VER_CD
			 , MAX(TARGET_FROM_DATE) + 34 AS TARGET_TO_DATE_KR
			 , MAX(TARGET_FROM_DATE) + 90 AS TARGET_TO_DATE_FR
			 , MAX(TARGET_FROM_DATE) AS TARGET_FROM_DATE
	      FROM TB_BF_CONTROL_BOARD_VER_DTL
	    WHERE VER_CD IN (SELECT VER_CD FROM VB)
	      AND PROCESS_NO = 10000
		GROUP BY VER_CD    
	)
	, RT_KR AS (
		SELECT RT.VER_CD
	 		 , IH.DESC_CD AS ITEM_CD
	 		 , IH.DESC_NM AS ITEM_NM
			 , AH.DESC_CD AS ACCOUNT_CD
			 , AH.DESC_NM AS ACCOUNT_NM
			 , BASE_DATE
			 , QTY
		  FROM TB_BF_RT_FINAL RT
		INNER JOIN IDS IH ON RT.ITEM_CD = IH.DESC_CD
		INNER JOIN ADS AH ON RT.ACCOUNT_CD = AH.DESC_CD
		INNER JOIN MD ON MD.VER_CD = RT.VER_CD
		  AND RT.BASE_DATE < MD.TARGET_TO_DATE_KR
		WHERE 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                       WHEN v_SRC_TP = 'KR' THEN 1
                       ELSE 0 END			  		
		  AND IH.SRC_TP = 'KR'
	) 
	, RT_FR AS (
		SELECT RT.VER_CD
	 		 , IH.DESC_CD AS ITEM_CD
	 		 , IH.DESC_NM AS ITEM_NM
			 , AH.DESC_CD AS ACCOUNT_CD
			 , AH.DESC_NM AS ACCOUNT_NM
			 , BASE_DATE
			 , QTY
		  FROM TB_BF_RT_FINAL RT
		INNER JOIN IDS IH ON RT.ITEM_CD = IH.DESC_CD
		INNER JOIN ADS AH ON RT.ACCOUNT_CD = AH.DESC_CD
		INNER JOIN MD ON MD.VER_CD = RT.VER_CD
		  AND RT.BASE_DATE < MD.TARGET_TO_DATE_FR
		WHERE 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                       WHEN v_SRC_TP = 'FR' THEN 1
                       ELSE 0 END			  		
		  AND IH.SRC_TP = 'FR'		  
	) 	
	, SA_KR AS (
		SELECT SA.VER_CD
			 , IH.DESC_CD AS ITEM_CD
			 , AH.DESC_CD AS ACCOUNT_CD
			 , BASE_DATE
			 , QTY
		  FROM (SELECT VER_CD
		  	 		 , BASE_DATE
		  	 		 , ITEM_MST_ID
		  	 		 , ACCOUNT_ID
		  	 		 , QTY 
		  	 	  FROM TB_CM_ACTUAL_SALES_FCST
		  	 	 WHERE VER_CD IN (SELECT VER_CD FROM VB)
		  	 	   AND BASE_DATE >= v_FROM_DATE
		  	 	   ) SA
		 INNER JOIN IDS IH ON SA.ITEM_MST_ID = IH.DESC_ID
		 INNER JOIN ADS AH ON SA.ACCOUNT_ID = AH.DESC_ID
		 INNER JOIN MD ON MD.VER_CD = SA.VER_CD
		   AND SA.BASE_DATE BETWEEN MD.TARGET_FROM_DATE AND MD.TARGET_TO_DATE_KR
		 WHERE 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                        WHEN v_SRC_TP = 'KR' THEN 1
                        ELSE 0 END			  		
		   AND IH.SRC_TP = 'KR'				   
	)
	, SA_FR AS (
		SELECT SA.VER_CD
			 , IH.DESC_CD AS ITEM_CD
			 , AH.DESC_CD AS ACCOUNT_CD
			 , BASE_DATE
			 , QTY
		  FROM (SELECT VER_CD
		  	 		 , BASE_DATE
		  	 		 , ITEM_MST_ID
		  	 		 , ACCOUNT_ID
		  	 		 , QTY 
		  	 	  FROM TB_CM_ACTUAL_SALES_FCST
		  	 	 WHERE VER_CD IN (SELECT VER_CD FROM VB)
		  	 	   AND BASE_DATE >= v_FROM_DATE
		  	 	   ) SA
		 INNER JOIN IDS IH ON SA.ITEM_MST_ID = IH.DESC_ID
		 INNER JOIN ADS AH ON SA.ACCOUNT_ID = AH.DESC_ID
		 INNER JOIN MD ON MD.VER_CD = SA.VER_CD
		   AND SA.BASE_DATE BETWEEN MD.TARGET_FROM_DATE AND MD.TARGET_TO_DATE_FR
		 WHERE 1 = CASE WHEN v_SRC_TP IS NULL THEN 1
                        WHEN v_SRC_TP = 'FR' THEN 1
                        ELSE 0 END			  		
		   AND IH.SRC_TP = 'FR'				   
	)
	, RT AS (
		SELECT VER_CD
			 , ITEM_CD
			 , ITEM_NM
			 , ACCOUNT_CD
			 , ACCOUNT_NM
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT *
			  	  FROM RT_KR
				 UNION ALL
				SELECT *
				  FROM RT_FR)
		 GROUP BY VER_CD, ITEM_CD, ITEM_NM, ACCOUNT_CD, ACCOUNT_NM, BASE_DATE
	)
	, SA AS (
		SELECT VER_CD
			 , ITEM_CD
			 , ACCOUNT_CD
			 , BASE_DATE
			 , SUM(QTY) AS QTY
		  FROM (SELECT *
			  	  FROM SA_KR
				 UNION ALL
				SELECT *
				  FROM SA_FR
			   )
		 GROUP BY VER_CD, ITEM_CD, ACCOUNT_CD, BASE_DATE
	)
	, WAPE AS (
		SELECT ITEM_CD
			 , ITEM_NM
			 , ACCOUNT_CD
			 , ACCOUNT_NM
			 , 100 - CASE WHEN SUM(ERR) = 0 THEN 0 
                       ELSE ROUND((CASE WHEN SUM(ERR)/SUM(SALES)<=1 THEN SUM(ERR)/SUM(SALES) ELSE 1 END), 3) * 100 END AS TOTAL_ACCRY
          FROM (		
			 SELECT RT.VER_CD
			 	  , RT.BASE_DATE
			 	  , RT.ITEM_CD
			 	  , RT.ITEM_NM
			 	  , RT.ACCOUNT_CD
			 	  , RT.ACCOUNT_NM
				  , CASE WHEN RT.BASE_DATE < TRUNC(SYSDATE, 'IW') THEN ABS(RT.QTY - NVL(SA.QTY, 0)) 
	             		 ELSE ABS(RT.QTY - SA.QTY) END AS ERR
		          , RT.QTY+0.00001					AS FCS
		          , TO_NUMBER(NVL(SA.QTY, 0)) + 0.00001		AS SALES 
			   FROM RT
			   LEFT JOIN SA 
			  	 ON RT.ITEM_CD = SA.ITEM_CD
			   	AND RT.ACCOUNT_CD = SA.ACCOUNT_CD
			   	AND RT.VER_CD = SA.VER_CD
			   	AND RT.BASE_DATE = SA.BASE_DATE
		   	)
		   	GROUP BY ITEM_CD, ITEM_NM, ACCOUNT_CD, ACCOUNT_NM		
	)
	 SELECT CASE WHEN p_MON = 'N' THEN TO_DATE(SUBSTR(VER_CD, 4, 8), 'YYYY-MM-DD')
        		 WHEN p_MON = 'Y' THEN TO_DATE(SUBSTR(VER_CD, 4, 6), 'YYYY-MM') END AS "DATE"
	 	  , A.ITEM_CD
          , A.ITEM_NM
          , A.ACCOUNT_CD
          , A.ACCOUNT_NM
		  , 100 - CASE WHEN SUM(ERR) = 0 THEN 0 
                       ELSE ROUND((CASE WHEN SUM(ERR)/SUM(SALES)<=1 THEN SUM(ERR)/SUM(SALES) ELSE 1 END), 3) * 100 END AS WAPE
          , B.TOTAL_ACCRY
       FROM (
		 	SELECT RT.VER_CD
		 	  	 , RT.BASE_DATE
		 	  	 , RT.ITEM_CD
		 	  	 , RT.ITEM_NM
		 	  	 , RT.ACCOUNT_CD
		 	  	 , RT.ACCOUNT_NM
			  	 , CASE WHEN RT.BASE_DATE < TRUNC(SYSDATE, 'IW') THEN ABS(RT.QTY - NVL(SA.QTY, 0)) 
             			ELSE ABS(RT.QTY - SA.QTY) END AS ERR
	          	 , RT.QTY+0.00001					AS FCS
	          	 , TO_NUMBER(NVL(SA.QTY, 0)) + 0.00001		AS SALES 
		  	 FROM RT
		  	 LEFT JOIN SA 
		  	   ON RT.ITEM_CD = SA.ITEM_CD
		   	  AND RT.ACCOUNT_CD = SA.ACCOUNT_CD
		   	  AND RT.VER_CD = SA.VER_CD
		   	  AND RT.BASE_DATE = SA.BASE_DATE
		   	) A
	  INNER JOIN WAPE B 
	  	 ON A.ITEM_CD = B.ITEM_CD 
	  	AND A.ITEM_NM = B.ITEM_NM 
	  	AND A.ACCOUNT_CD = B.ACCOUNT_CD
	  	AND A.ACCOUNT_NM = B.ACCOUNT_NM
	  GROUP BY CASE WHEN p_MON = 'N' THEN TO_DATE(SUBSTR(VER_CD, 4, 8), 'YYYY-MM-DD')
			        WHEN p_MON = 'Y' THEN TO_DATE(SUBSTR(VER_CD, 4, 6), 'YYYY-MM') END, A.ITEM_CD, A.ITEM_NM, A.ACCOUNT_CD, A.ACCOUNT_NM, B.TOTAL_ACCRY	   	
	  ORDER BY 2, 4, 1;
	 
	 END IF;
END;