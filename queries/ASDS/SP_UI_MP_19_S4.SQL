CREATE OR REPLACE PROCEDURE DWSCM.SP_UI_MP_19_S4 (
     P_DMND_ID                  IN CHAR := NULL
    ,P_DMND_OVW_ID				IN VARCHAR2 := NULL
    ,P_T_VERSION_ID				IN VARCHAR2 := NULL
    ,P_ACTV_YN                  IN CHAR	:= NULL
    ,P_DISPLAY_COLOR			IN VARCHAR2 := NULL
    ,P_DMND_TP_ID               IN CHAR := NULL
    ,P_URGENT_ORDER_TP	        IN CHAR := NULL
    ,P_DMND_CLASS_ID            IN CHAR := NULL
    ,P_ITEM_MST_ID				IN CHAR := NULL
    ,P_UOM_ID					IN CHAR := NULL
    ,P_SALES_UNIT_PRIC			IN NUMBER := NULL
    ,P_ACCOUNT_ID				IN CHAR := NULL
    ,P_DMND_QTY			        IN NUMBER := NULL
    ,P_DUE_DATE				    IN DATE
    ,P_PRIORT                   IN INT
    ,P_PRDUCT_DELIVY_DATE       IN DATE
    ,P_DELIVY_PLAN_POLICY_CD_ID IN CHAR := NULL
    ,P_MAT_CONST_CD_ID          IN CHAR := NULL
    ,P_PARTIAL_PLAN_YN          IN CHAR := NULL
    ,P_COST_OPTIMIZ_YN          IN CHAR := NULL
    ,P_HEURISTIC_YN 	        IN CHAR := NULL
    ,P_PST						IN DATE := NULL
    ,P_DUE_DATE_FNC             IN DATE
    ,P_STRATEGY_METHD_ID		IN CHAR := NULL
    ,P_USER_ID					IN VARCHAR2 := NULL
    ,P_RT_ROLLBACK_FLAG	        OUT VARCHAR2
    ,P_RT_MSG				    OUT VARCHAR2
)
IS
    P_ERR_STATUS    NUMBER := 0;
    P_ERR_MSG       VARCHAR2(4000) := '';
    V_MAP_ID        VARCHAR2(100) := NULL;
   	v_LOCAT_ID	VARCHAR2(100) := '';
    
BEGIN
	P_ERR_MSG := 'MSG_0006';
    IF P_ITEM_MST_ID IS NULL THEN RAISE_APPLICATION_ERROR(-20012, P_ERR_MSG); END IF;
    IF P_ACCOUNT_ID IS NULL THEN RAISE_APPLICATION_ERROR(-20012, P_ERR_MSG); END IF;
    IF P_DMND_QTY IS NULL THEN RAISE_APPLICATION_ERROR(-20012, P_ERR_MSG); END IF;
    IF P_DUE_DATE IS NULL THEN RAISE_APPLICATION_ERROR(-20012, P_ERR_MSG); END IF;

    P_ERR_MSG :='MSG_0008';
    IF NVL(P_DMND_QTY, 0) < 0 THEN RAISE_APPLICATION_ERROR(-20012, P_ERR_MSG); END IF;
    IF NVL(P_SALES_UNIT_PRIC, 0) < 0 THEN RAISE_APPLICATION_ERROR(-20012, P_ERR_MSG); END IF;
    IF NVL(P_PRIORT, 0) < 0 THEN RAISE_APPLICATION_ERROR(-20012, P_ERR_MSG); END IF;

--    SELECT A.ID INTO V_MAP_ID
--      FROM TB_CM_DMND_SHPP_MAP_MST A
--          ,TB_CM_LOC_MGMT B
--     WHERE A.ACTV_YN = 'Y'
--       AND B.ACTV_YN = 'Y'
--       AND A.LOCAT_MGMT_ID = B.ID
--       AND A.ITEM_MST_ID = P_ITEM_MST_ID
--       AND A.ACCOUNT_ID =  P_ACCOUNT_ID;

 	SELECT CASE WHEN P_ACCOUNT_ID = 'FAAFC6B5FB42CDFEE053DD0A10ACA2F2' THEN 'FC7C4049D2372BFCE053DD0A10AC6D54'
				WHEN P_ACCOUNT_ID = 'D20230614200054265D811881586718D' THEN 'FB2A45875DD4D911E053DD0A10AC50BC'
				WHEN P_ACCOUNT_ID = 'FAAFC6B5FB45CDFEE053DD0A10ACA2F2' THEN 'FC7C4049D2392BFCE053DD0A10AC6D54'
				WHEN P_ACCOUNT_ID = 'E20230614200238462D556312186289W' THEN 'FB2A45875DD5D911E053DD0A10AC50BC'
				WHEN P_ACCOUNT_ID = 'FAAFC6B5FB41CDFEE053DD0A10ACA2F2' THEN 'FC7C4049D23B2BFCE053DD0A10AC6D54'
				WHEN P_ACCOUNT_ID = 'D20230614200304107E289930099587E' THEN 'FB2A45875DD3D911E053DD0A10AC50BC' END INTO v_LOCAT_ID 
	  FROM DUAL;
	 
	SELECT A.ID INTO V_MAP_ID -- 23.12.21 YJS TB_IM_INV_POLICY_ITEM 에 존재하는 상품만 수요개요 추가 가능
	  FROM TB_IM_INV_POLICY_ITEM A
 	 INNER JOIN TB_CM_SITE_ITEM B
		ON A.LOCAT_ITEM_ID = B.ID
	 INNER JOIN TB_CM_LOC_MGMT C
		ON B.LOCAT_MGMT_ID = C.ID 
	 WHERE B.ITEM_MST_ID = P_ITEM_MST_ID
	   AND C.LOCAT_ID = v_LOCAT_ID	   
	   AND A.ACTV_YN = 'Y'
	   AND B.ACTV_YN = 'Y'
	   AND C.ACTV_YN = 'Y';
		
    P_ERR_MSG :='MSG_5016';
    IF(V_MAP_ID IS NULL OR v_LOCAT_ID IS NULL) THEN RAISE_APPLICATION_ERROR(-20012, P_ERR_MSG); END IF;
        
--    INSERT INTO TB_CM_DEMAND_OVERVIEW 
--    (
--        ID								
--       ,MODULE_VAL
--       ,T3SERIES_VER_ID
--       ,CONFRM_YN
--       ,FINAL_CONFRM_YN
--       ,DMND_ID
--       ,DMND_TP_ID
--       ,URGENT_ORDER_TP_ID
--       ,DMND_CLASS_ID
--       ,ITEM_MST_ID
--       ,DMND_QTY
--       ,UOM_ID
--       ,DUE_DATE
--       ,REQUEST_SITE_ID
--       ,ACCOUNT_ID
--       ,SALES_UNIT_PRIC
--       ,MARGIN
--       ,CURCY_CD_ID
--       ,BOD_LEADTIME
--       ,TIME_UOM_ID
--       ,PRIORT
--       ,PRDUCT_DELIVY_DATE
--       ,ASSIGN_SITE_CNT
--       ,ASSIGN_RES_CNT
--       ,DELIVY_PLAN_POLICY_CD_ID
--       ,MAT_CONST_CD_ID
--       ,EFFICY
--       ,PARTIAL_PLAN_YN
--       ,COST_OPTIMIZ_YN
--       ,HEURISTIC_YN
--       ,PST
--       ,DUE_DATE_FNC
--       ,DELIVY_DATE
--       ,DAYS_LATE
--       ,PLAN_QTY
--       ,LATE_QTY
--       ,SHRT_QTY
--       ,DELIVY_QTY
--       ,ON_TIME_QTY
--       ,STRATEGY_METHD_ID
--       ,DISPLAY_COLOR
--       ,ACTV_YN
--       ,CREATE_BY
--       ,CREATE_DTTM
--    )
--    VALUES
--    (	TO_SINGLE_BYTE(SYS_GUID())
--       ,'DP'
--       ,P_T_VERSION_ID
--       ,'Y'
--       ,'Y'
--       ,P_DMND_ID
--       ,P_DMND_TP_ID
--       ,P_URGENT_ORDER_TP
--       ,P_DMND_CLASS_ID
--       ,P_ITEM_MST_ID
--       ,TO_NUMBER(DECODE(RTRIM(P_DMND_QTY),'',null,P_DMND_QTY))
--       ,P_UOM_ID
--       ,P_DUE_DATE
--       ,NULL
--       ,P_ACCOUNT_ID
--       ,TO_NUMBER(DECODE(RTRIM(P_SALES_UNIT_PRIC),'',null,P_SALES_UNIT_PRIC))
--       ,NULL
--       ,(SELECT CURCY_CD_ID FROM TB_DP_ACCOUNT_MST WHERE ID = P_ACCOUNT_ID)
--       ,NULL
--       ,NULL
--       ,P_PRIORT
--       ,P_PRDUCT_DELIVY_DATE
--       ,NULL
--       ,NULL
--       ,P_DELIVY_PLAN_POLICY_CD_ID
--       ,P_MAT_CONST_CD_ID
--       ,(SELECT CONF_NM
--            FROM TB_CM_COMM_CONFIG
--            WHERE CONF_GRP_CD = 'MP_BASE_EFFCIENCY')
--       ,P_PARTIAL_PLAN_YN
--       ,P_COST_OPTIMIZ_YN
--       ,P_HEURISTIC_YN
--       ,P_PST
--       ,P_DUE_DATE_FNC
--       ,NULL
--       ,NULL
--       ,NULL
--       ,NULL
--       ,NULL
--       ,NULL
--       ,NULL
--       ,P_STRATEGY_METHD_ID
--       ,P_DISPLAY_COLOR
--       ,'Y'
--       ,P_USER_ID
--       ,SYSDATE
--    );
	
    MERGE INTO TB_CM_DEMAND_OVERVIEW A USING (
    	SELECT TO_SINGLE_BYTE(SYS_GUID()) AS ID
    		 , A1.MODULE_VAL
    		 , A1.T3SERIES_VER_ID
    		 , A1.CONFRM_YN
    		 , A1.FINAL_CONFRM_YN
    		 , A1.DMND_ID
    		 , A1.DMND_TP_ID
    		 , A1.URGENT_ORDER_TP_ID
    		 , A1.ITEM_MST_ID
    		 , A1.DMND_QTY
    		 , A1.UOM_ID
    		 , A1.DUE_DATE
    		 , A1.ACCOUNT_ID
    		 , A1.DELIVY_PLAN_POLICY_CD_ID
    		 , A1.DMND_CLASS_ID
    		 , A1.EFFICY
    		 , A1.PARTIAL_PLAN_YN
    		 , A1.COST_OPTIMIZ_YN
    		 , A4.ATTR_01 AS SALES_UNIT_PRIC
    		 , A2.CURCY_ID AS CURCY_CD_ID
    		 , A1.HEURISTIC_YN
    		 , A1.ACTV_YN
    		 , A3.ID      AS REQUEST_SITE_ID
    	  FROM (SELECT 'DP' AS MODULE_VAL
				     , P_T_VERSION_ID AS T3SERIES_VER_ID
				     , 'Y' AS CONFRM_YN
				     , 'Y' AS FINAL_CONFRM_YN
				     , P_DMND_ID AS DMND_ID
				     , P_DMND_TP_ID AS DMND_TP_ID
				     , P_URGENT_ORDER_TP AS URGENT_ORDER_TP_ID
				     , P_DMND_CLASS_ID AS DMND_CLASS_ID
				     , P_ITEM_MST_ID AS ITEM_MST_ID
				     , TO_NUMBER(DECODE(RTRIM(P_DMND_QTY),'',null,P_DMND_QTY)) AS DMND_QTY
				     , P_UOM_ID AS UOM_ID
				     , P_DUE_DATE AS DUE_DATE
				     , P_ACCOUNT_ID AS ACCOUNT_ID
				     , (SELECT ID FROM TB_CM_COMM_CONFIG WHERE CONF_GRP_CD = 'CM_BASE_ORD_DELIV_POLICY'
			               AND DEFAT_VAL = 'Y'           
			           )                                                                        AS DELIVY_PLAN_POLICY_CD_ID
			         , (SELECT CONF_CD  FROM TB_CM_COMM_CONFIG
			             WHERE CONF_GRP_CD = 'MP_BASE_EFFCIENCY')                               AS EFFICY
			         , (SELECT CASE WHEN CONF_CD = 'TRUE' then 'Y' else 'N'  end FROM TB_CM_COMM_CONFIG
			             WHERE CONF_GRP_CD = 'MP_ORD_PARTIAL_PLN')                              AS PARTIAL_PLAN_YN
			         , (SELECT (CASE WHEN CONF_CD = 'TRUE' then 'Y' else 'N'  end) FROM TB_CM_COMM_CONFIG
			             WHERE CONF_GRP_CD = 'CM_ORD_ROUT_COST_OPT')                            AS COST_OPTIMIZ_YN			             
				     , P_HEURISTIC_YN AS HEURISTIC_YN
				     , 'Y' AS ACTV_YN
		  		  FROM DUAL) A1
		  INNER JOIN TB_DPD_ACCOUNT_HIERACHY2 A2
		     ON A2.LVL03_ID = A1.ACCOUNT_ID 
		  INNER JOIN TB_CM_LOC_DTL A3
		     ON A3.LOCAT_CD = CASE WHEN A2.ACCOUNT_CD LIKE '%POS' THEN '0'||A2.LVL02_CD ELSE A2.LVL02_CD END
		  INNER JOIN TB_CM_ITEM_MST A4
		 	 ON A1.ITEM_MST_ID = A4.ID
    ) B ON (A.T3SERIES_VER_ID = B.T3SERIES_VER_ID AND A.ITEM_MST_ID = B.ITEM_MST_ID AND A.ACCOUNT_ID = B.ACCOUNT_ID AND A.DUE_DATE = B.DUE_DATE)
    WHEN MATCHED THEN 
    UPDATE SET A.DMND_QTY = B.DMND_QTY, A.MODIFY_BY = P_USER_ID, A.MODIFY_DTTM = SYSDATE
    WHEN NOT MATCHED THEN
    INSERT (ID, MODULE_VAL, T3SERIES_VER_ID, CONFRM_YN, 
			FINAL_CONFRM_YN, DMND_ID, DMND_TP_ID, ACCOUNT_ID, 
			ITEM_MST_ID, DMND_QTY, UOM_ID, DUE_DATE, REQUEST_SITE_ID, URGENT_ORDER_TP_ID, DMND_CLASS_ID, HEURISTIC_YN,
			EFFICY, SALES_UNIT_PRIC, CURCY_CD_ID, DELIVY_PLAN_POLICY_CD_ID, 
			PARTIAL_PLAN_YN, COST_OPTIMIZ_YN, ACTV_YN, CREATE_BY, CREATE_DTTM) 
	VALUES (B.ID, B.MODULE_VAL, B.T3SERIES_VER_ID, B.CONFRM_YN, 
			B.FINAL_CONFRM_YN, B.DMND_ID, B.DMND_TP_ID, B.ACCOUNT_ID,
			B.ITEM_MST_ID, B.DMND_QTY, B.UOM_ID, B.DUE_DATE, B.REQUEST_SITE_ID, B.URGENT_ORDER_TP_ID, B.DMND_CLASS_ID, B.HEURISTIC_YN,
			B.EFFICY, B.SALES_UNIT_PRIC, B.CURCY_CD_ID, B.DELIVY_PLAN_POLICY_CD_ID, 
			B.PARTIAL_PLAN_YN, B.COST_OPTIMIZ_YN, B.ACTV_YN, P_USER_ID, SYSDATE);
   
    P_RT_ROLLBACK_FLAG := 'true';
    P_RT_MSG := 'MSG_0001';
    
   EXCEPTION
    WHEN OTHERS THEN     
        P_RT_ROLLBACK_FLAG := 'false';
        IF(SQLCODE = -20012)
        THEN
              P_RT_MSG := P_ERR_MSG;   
          ELSE
              P_RT_MSG := SQLERRM;
          END IF;
END;